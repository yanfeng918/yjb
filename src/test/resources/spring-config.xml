<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
         
	<!-- 打开Spring的Annotation支持 -->
	<context:annotation-config />
	<!-- 设定Spring 去哪些包中找Annotation -->
	<context:component-scan base-package="com.yongjinbao" />


	<!-- 引入jdbc配置文件 -->
	<context:property-placeholder location="classpath:yjb.properties" />
	 
	<bean id="springUtils" class="com.yongjinbao.utils.SpringUtils"></bean>


    <!--创建jdbc数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="dataSource" ref="dataSource" />
	    <property name="configLocation" value="classpath:mybatis-config.xml" />
	    <!-- <property  name="mapperLocations"  value="classpath*:com/fangdd/zhuanti/model/*.xml" />
	    <property name="typeAliasesPackage" value="com/fangdd/zhuanti/model" /> -->
	</bean>

	 <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
     	<constructor-arg index="0" ref="sqlSessionFactory" />
	 </bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <!-- <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean> -->

    <!--事务管理器配置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <aop:config expose-proxy="true" proxy-target-class="true">
        <!-- 只对业务逻辑层实施事务 -->
        <aop:pointcut id="txPointcut" expression="execution(* com..service..*+.*(..))"/>
        <aop:advisor id="txAdvisor" advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>

    <!-- 可通过注解控制事务 -->
    <tx:annotation-driven />

   <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="${task.core_pool_size}" />
		<property name="maxPoolSize" value="${task.max_pool_size}" />
		<property name="queueCapacity" value="${task.queue_capacity}" />
		<property name="keepAliveSeconds" value="${task.keep_alive_seconds}" />
	</bean>
    
     <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
				<prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
				<prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
				<!--
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				-->
			</props>
		</property>
	</bean>
	
	 <!-- 国际化配置 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="cacheSeconds" value="${message.cache_seconds}" />
		<property name="useCodeAsDefaultMessage" value="true" />
		<property name="basenames">
			<list>
				<value>${message.common_path}</value>
				<value>${message.shop_path}</value>
				<value>${message.admin_path}</value>
			</list>
		</property>
	</bean>

	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.FixedLocaleResolver">
		<property name="defaultLocale" value="${locale}" />
	</bean>
	
	<!--<bean id="imageCaptchaService" class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService">-->
		 	<!---->
		<!--<property name="captchaEngine">-->
			<!--<bean class="com.yongjinbao.beans.CaptchaEngine" />-->
		<!--</property>-->
		<!--<property name="minGuarantedStorageDelayInSeconds" value="3600" />-->
	<!--</bean>-->
	<!---->
	 <!--<bean id="myCaptchaStore" class="com.yongjinbao.beans.CaptchaEngine"/> -->
	
	<bean id="freeMarkerConfigurer" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPaths" value="${template.loader_path}" />
		<property name="freemarkerSettings">
			<props>
				<prop key="defaultEncoding">${template.encoding}</prop>
				<prop key="url_escaping_charset">${url_escaping_charset}</prop>
				<prop key="locale">${locale}</prop>
				<prop key="template_update_delay">${template.update_delay}</prop>
				<prop key="tag_syntax">auto_detect</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="number_format">${template.number_format}</prop>
				<prop key="boolean_format">${template.boolean_format}</prop>
				<prop key="datetime_format">${template.datetime_format}</prop>
				<prop key="date_format">${template.date_format}</prop>
				<prop key="time_format">${template.time_format}</prop>
				<prop key="object_wrapper">freemarker.ext.beans.BeansWrapper</prop>
			</props>
		</property>
		
		<property name="freemarkerVariables">
			<map>
				<entry key="systemName" value="${system.name}" />
		<entry key="systemVersion" value="${system.version}" />
		<!--<entry key="systemDescription" value="${system.description}" />-->
		<!--<entry key="systemShowPowered" value="${system.show_powered}" />-->
		<!--<entry key="base" value="#{servletContext.contextPath}" />-->
		<entry key="locale" value="${locale}" />
		<entry key="message"><bean class="com.yongjinbao.utils.MessageMethod"></bean></entry>
		<entry key="setting" value="#{T(com.yongjinbao.utils.SettingUtils).get()}" />
	</map>
</property>
	</bean>
	
<!-- 	
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
	    <property name="exceptionMappings">  
	        <props>  
	            <prop key="com.yongjin.controller.entity.MyException">error</prop>  
	        </props>  
	    </property>  
	</bean> -->
	
   <!--  <import resource="classpath:spring-config-shiro.xml"/> -->

 
</beans>